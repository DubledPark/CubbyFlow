// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_POINTSIMPLELISTSEARCHER3_JET_CUBBYFLOW_H_
#define FLATBUFFERS_GENERATED_POINTSIMPLELISTSEARCHER3_JET_CUBBYFLOW_H_

#include "flatbuffers/flatbuffers.h"

#include "BasicTypes_generated.h"

namespace jet {
namespace CubbyFlow {

struct PointSimpleListSearcher3;

struct PointSimpleListSearcher3 FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_POINTS = 4
  };
  const flatbuffers::Vector<const jet::CubbyFlow::Vector3D *> *Points() const { return GetPointer<const flatbuffers::Vector<const jet::CubbyFlow::Vector3D *> *>(VT_POINTS); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_POINTS) &&
           verifier.Verify(Points()) &&
           verifier.EndTable();
  }
};

struct PointSimpleListSearcher3Builder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_Points(flatbuffers::Offset<flatbuffers::Vector<const jet::CubbyFlow::Vector3D *>> points) { fbb_.AddOffset(PointSimpleListSearcher3::VT_POINTS, points); }
  PointSimpleListSearcher3Builder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  PointSimpleListSearcher3Builder &operator=(const PointSimpleListSearcher3Builder &);
  flatbuffers::Offset<PointSimpleListSearcher3> Finish() {
    auto o = flatbuffers::Offset<PointSimpleListSearcher3>(fbb_.EndTable(start_, 1));
    return o;
  }
};

inline flatbuffers::Offset<PointSimpleListSearcher3> CreatePointSimpleListSearcher3(flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<const jet::CubbyFlow::Vector3D *>> points = 0) {
  PointSimpleListSearcher3Builder builder_(_fbb);
  builder_.add_Points(points);
  return builder_.Finish();
}

inline flatbuffers::Offset<PointSimpleListSearcher3> CreatePointSimpleListSearcher3Direct(flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<const jet::CubbyFlow::Vector3D *> *points = nullptr) {
  return CreatePointSimpleListSearcher3(_fbb, points ? _fbb.CreateVector<const jet::CubbyFlow::Vector3D *>(*points) : 0);
}

inline const jet::CubbyFlow::PointSimpleListSearcher3 *GetPointSimpleListSearcher3(const void *buf) { return flatbuffers::GetRoot<jet::CubbyFlow::PointSimpleListSearcher3>(buf); }

inline bool VerifyPointSimpleListSearcher3Buffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<jet::CubbyFlow::PointSimpleListSearcher3>(nullptr); }

inline void FinishPointSimpleListSearcher3Buffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<jet::CubbyFlow::PointSimpleListSearcher3> root) { fbb.Finish(root); }

}  // namespace CubbyFlow
}  // namespace jet

#endif  // FLATBUFFERS_GENERATED_POINTSIMPLELISTSEARCHER3_JET_CUBBYFLOW_H_
